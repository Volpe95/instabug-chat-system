version: '2.2'

services:

  redis:
    image: redis:5.0
    restart: always
    volumes:
      - ./volumes/redis-data:/data
    command: redis-server --appendonly yes

  mysql:
    image: mysql:5.7
    # ports:
    #   - "3306:3306"

    # volumes:
    #   - db:/var/lib/mysql
    #   - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USERNAME=root
        - MYSQL_PASSWORD=root
    command: --default-authentication-plugin=mysql_native_password


  rabbitmq:
    image: rabbitmq:3.6.9-alpine
    restart: always
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq

  es:
    image: elasticsearch:5.4.0-alpine
    restart: always

  api:
    build: .
    command: sh -c "sh wait-curl.sh es:9200 && sh ./init.sh && rails s -p 3000 -b '0.0.0.0'"
    restart: always
    volumes:
      - .:/app
    ports:
      - "4000:3000"
    links:
      - mysql
      - redis
      - es
      - rabbitmq
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - ES_HOST=es

  worker:
    build: .
    command: sh -c "sh wait-curl.sh es:9200 && rake sneakers:run"
    restart: always
    volumes:
      - .:/app
    links:
      - mysql
      - redis
      - es
      - rabbitmq
    depends_on:
      - api
    environment:
      - WORKERS=ChatsWorker,MessagesWorker,Worker
      - REDIS_HOST=redis
      - MYSQL_HOST=mysql
      - RABBITMQ_HOST=rabbitmq
      - ES_HOST=es